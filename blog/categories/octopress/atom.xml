<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Adrian Mejia's Blog]]></title>
  <link href="http://adrianmejia.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://adrianmejia.com/"/>
  <updated>2014-10-02T14:42:25-04:00</updated>
  <id>http://adrianmejia.com/</id>
  <author>
    <name><![CDATA[Adrian Mejia]]></name>
    <email><![CDATA[me@adrianmejia.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog Migration Explained: Drupal 7 to Jekyll]]></title>
    <link href="http://adrianmejia.com/blog/2012/04/27/blog-migration-explained-drupal-7-to-jekyll/"/>
    <updated>2012-04-27T22:00:00-04:00</updated>
    <id>http://adrianmejia.com/blog/2012/04/27/blog-migration-explained-drupal-7-to-jekyll</id>
    <content type="html"><![CDATA[<p>This post is a guide on how to extract your blog posts information from Drupal 7 to other systems. And also automatically create a redirect files from the old blog to the new one. In this case, I migrated to Jerkyll/Octopress blog but from the data extracted in with my script you can migrate any other blog system. Hopefully, this will save you a lot of time if you need to do the same task. If you run into troubles go to last section of the post it has some suggestions.</p>

<h2>Extract data from Drupal 7 site</h2>

<h3>SQL extraction</h3>

<p>You need to extract the data from your Drupal 7, there are several ways. You can connect to your web host via ssh and generate SQL dump.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysqldump</span> <span class="err">–</span><span class="n">uUSERNAME</span> <span class="err">–</span><span class="n">pPASSWORD</span> <span class="k">DATABASE</span> <span class="o">&gt;</span> <span class="n">FILENAME</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>(replace the UPPERCASE letters with your settings)</p>

<p>You can download the file *.sql to your computer and run the following command to install to upload the data in your local database.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysql</span> <span class="err">–</span><span class="n">uUSERNAME</span> <span class="err">–</span><span class="n">pPASSWORD</span> <span class="k">DATABASE</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">FILENAME</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>If you have a access to you phpmyadmin in your host server you can download your sql dump file through that also. Other method is to use a local port fordwarding using SSH… anyways, get access to your database.</p>

<h3>Run the script</h3>

<p>The 2nd and final step is to run the script that does all the magic. Below I will explain how it works in case that you want to customize.</p>

<p><div><script src='https://gist.github.com/2515239.js?file=drupal2jekyll.rb'></script>
<noscript><pre><code># 
# Jekyll migrator for Drupal 7+
# adrianmejia.com
#

require &#39;rubygems&#39;
require &#39;sequel&#39;
require &#39;fileutils&#39;
require &#39;yaml&#39;

# NOTE: This converter requires Sequel and the MySQL gems.
# The MySQL gem can be difficult to install on OS X. Once you have MySQL
# installed, running the following commands should work:
# $ sudo gem install sequel
# $ sudo gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
#
# UPDATE:
# Install mysql2 as well you might need it as well.
# $ gem install mysql2 -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
#

OLD_DOMAIN = &quot;http://adrianmejiarosario.com&quot;  ## TODO replace this out
NEW_DOMAIN = &quot;http://adrianmejia.com&quot;         ## TODO replace this out


module Jekyll
  module Drupal
    # Reads a MySQL database via Sequel and creates a post file for each post
    # in wp_posts that has post_status = &#39;publish&#39;. This restriction is made
    # because &#39;draft&#39; posts are not guaranteed to have valid dates.
    
    QUERY =&lt;&lt;SQL 
    SELECT 
    n.nid, 
    n.title, 
    n.created, 
    n.changed, 
    b.body_value AS &#39;body&#39;, 
    b.body_summary, 
    b.body_format, 
    n.status, 
    l.alias AS &#39;slug&#39;, 
    GROUP_CONCAT( d.name SEPARATOR &#39;, &#39; ) AS &#39;tags&#39;
    
    FROM dr_url_alias l, dr_node n
    JOIN dr_field_data_body b ON b.entity_id = n.nid
    JOIN dr_taxonomy_index t ON t.nid = n.nid
    JOIN dr_taxonomy_term_data d ON t.tid = d.tid

    WHERE n.type = &#39;blog&#39;
    AND b.revision_id = n.vid
    AND l.source = CONCAT( &#39;node/&#39;, n.nid ) 

    GROUP BY n.nid
SQL

    #
    # Main script
    # 
    def self.process(dbname, user, pass, host = &#39;localhost&#39;)
      db = Sequel.mysql(dbname, :user =&gt; user, :password =&gt; pass, :host =&gt; host, :encoding =&gt; &#39;utf8&#39;)

      drupal_path = &quot;drupal_redirect&quot;
      FileUtils.mkdir_p drupal_path
           
      File.open(&quot;#{drupal_path}/index.php&quot;, &quot;w&quot;) { |f| f.puts permanent_redirect_to (&quot;&quot;) }
      FileUtils.mkdir_p &quot;_posts&quot;
      FileUtils.mkdir_p &quot;_drafts&quot;


      db[QUERY].each do |post|
        # Get required fields and construct Jekyll compatible name
        node_id = post[:nid]
        title = post[:title]
        
        # complete relatives URLs
        content = post[:body].gsub(&quot;\&quot;/sites/default/files/&quot;, &quot;\&quot;#{OLD_DOMAIN}/sites/default/files/&quot;)
        
        created = post[:created]
        tags = post[:tags].downcase.strip
        drupal_slug = post[:slug]
        time = Time.at(created)
        is_published = post[:status] == 1
        dir = is_published ? &quot;_posts&quot; : &quot;_drafts&quot;
        slug = title.strip.downcase.gsub(/(&amp;|&amp;amp;)/, &#39; and &#39;).gsub(/[\s\.\/\\]/, &#39;-&#39;).gsub(/[^\w-]/, &#39;&#39;).gsub(/[-_]{2,}/, &#39;-&#39;).gsub(/^[-_]/, &#39;&#39;).gsub(/[-_]$/, &#39;&#39;)
        name = time.strftime(&quot;%Y-%m-%d-&quot;) + slug + &#39;.md&#39;

        # Get the relevant fields as a hash, delete empty fields and convert
        # to YAML for the header
        data = {
           &#39;layout&#39; =&gt; &#39;post&#39;,
           &#39;title&#39; =&gt; title.to_s,
           &#39;created&#39; =&gt; created,
           &#39;comments&#39; =&gt; true,
           &#39;categories&#39; =&gt; tags
         }.delete_if { |k,v| v.nil? || v == &#39;&#39;}.to_yaml

        # Write out the data and content to file
        File.open(&quot;#{dir}/#{name}&quot;, &quot;w&quot;) do |f|
          f.puts data.gsub /categories:\W+(.+)/, &#39;categories: [\1]&#39;
          f.puts &quot;---&quot;
          f.puts content
        end

        # 
        # Make a file to redirect from the old Drupal URL
        # Make refresh dirs &amp; files according to entries in url_alias table in drupal 7+
        # Copy the content to your drupal_redirect to the root of your all blog and that&#39;s it. It will redirect to your new site.
        #
        if is_published
          ddir = &quot;#{drupal_path}/#{drupal_slug}&quot;
          FileUtils.mkdir_p ddir
          File.open(&quot;#{ddir}/index.php&quot;, &quot;w&quot;) do |f|
            puts &quot;#{ddir}/index.php&quot;
            f.puts permanent_redirect_to &quot;blog/#{time.strftime(&quot;%Y/%m/%d/&quot;) + slug}&quot;
          end
        end
      end

      # TODO: Make dirs &amp; files for nodes of type &#39;page&#39;
      # Make refresh pages for these as well
    end    
  end
end

#
# PHP code to redirect permanently your users from your old website to your new
#
def permanent_redirect_to(location)
  &quot;&lt;?php\nheader(\&quot;HTTP/1.1 301 Moved Permanently\&quot;);\nheader(\&quot;Location: #{NEW_DOMAIN}/#{location}\&quot;);\necho \&quot;redirecting...\&quot;\n ?&gt;&quot;
end

Jekyll::Drupal.process(ENV[&#39;DRUPAL_DATABASE&#39;],ENV[&#39;DB_USER&#39;],ENV[&#39;DB_PASSWORD&#39;])</code></pre></noscript></div>
</p>

<p>Replace the place holders with your actual values:</p>

<ul>
<li>OLD_DOMAIN</li>
<li>NEW_DOMAIN</li>
<li>ENV[&lsquo;DRUPAL_DATABASE&rsquo;]</li>
<li>ENV[&lsquo;DB_USER&rsquo;]</li>
<li>ENV[&lsquo;DB_PASSWORD&rsquo;]</li>
</ul>


<p>After you run it, it will generate 3 folders:</p>

<ul>
<li>_post: has all your post in the Jekyll style (categories and tags and everything)</li>
<li>_draft: not published posts if any</li>
<li>drupal_redirect: for each url of your posts it has a folder with a redirect index.php file to your new domain.</li>
</ul>


<p>Copy each of this folder to their respective places. Copy the content to your drupal_redirect to the root of your old blog and that&rsquo;s it. It will redirect all your all blog URLs to your new site.</p>

<h3>Behind the scenes…</h3>

<p>First, you need to extract the data from your Drupal site. I reversed engineer the database in order to extract the post, title, url alias (slug), tags, publish info, format and the last version of the post. The query that does all the magic is the following one:</p>

<p><figure class='code'><figcaption><span>Drupal 7 Query to extract all the post info </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'><span class="n">n</span><span class="p">.</span><span class="n">nid</span><span class="p">,</span>
</span><span class='line'><span class="n">n</span><span class="p">.</span><span class="n">title</span><span class="p">,</span>
</span><span class='line'><span class="n">n</span><span class="p">.</span><span class="n">created</span><span class="p">,</span>
</span><span class='line'><span class="n">n</span><span class="p">.</span><span class="n">changed</span><span class="p">,</span>
</span><span class='line'><span class="n">b</span><span class="p">.</span><span class="n">body_value</span> <span class="k">AS</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">body</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span>
</span><span class='line'><span class="n">b</span><span class="p">.</span><span class="n">body_summary</span><span class="p">,</span>
</span><span class='line'><span class="n">b</span><span class="p">.</span><span class="n">body_format</span><span class="p">,</span>
</span><span class='line'><span class="n">n</span><span class="p">.</span><span class="n">status</span><span class="p">,</span>
</span><span class='line'><span class="n">l</span><span class="p">.</span><span class="k">alias</span> <span class="k">AS</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">slug</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span>
</span><span class='line'><span class="n">GROUP_CONCAT</span><span class="p">(</span> <span class="n">d</span><span class="p">.</span><span class="n">name</span> <span class="n">SEPARATOR</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">)</span> <span class="k">AS</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">tags</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">FROM</span> <span class="n">url_alias</span> <span class="n">l</span><span class="p">,</span> <span class="n">node</span> <span class="n">n</span>
</span><span class='line'><span class="k">JOIN</span> <span class="n">field_data_body</span> <span class="n">b</span> <span class="k">ON</span> <span class="n">b</span><span class="p">.</span><span class="n">entity_id</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">nid</span>
</span><span class='line'><span class="k">JOIN</span> <span class="n">taxonomy_index</span> <span class="n">t</span> <span class="k">ON</span> <span class="n">t</span><span class="p">.</span><span class="n">nid</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">nid</span>
</span><span class='line'><span class="k">JOIN</span> <span class="n">taxonomy_term_data</span> <span class="n">d</span> <span class="k">ON</span> <span class="n">t</span><span class="p">.</span><span class="n">tid</span> <span class="o">=</span> <span class="n">d</span><span class="p">.</span><span class="n">tid</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">WHERE</span> <span class="n">n</span><span class="p">.</span><span class="k">type</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">blog</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">AND</span> <span class="n">b</span><span class="p">.</span><span class="n">revision_id</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">vid</span>
</span><span class='line'><span class="k">AND</span> <span class="n">l</span><span class="p">.</span><span class="k">source</span> <span class="o">=</span> <span class="n">CONCAT</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">node</span><span class="o">/&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">n</span><span class="p">.</span><span class="n">nid</span> <span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">n</span><span class="p">.</span><span class="n">nid</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>As might notice, it concatenates all the tags separated by comma and also finds the alias of the url if is called node. Also you can also find the url alias for other pages such as terms or taxonomies. But let’s keep it simple and get the posts urls.</p>

<p>Finally, the script will use the data from this query to generate the new posts files and also to create the redirect files.</p>

<p>As might notice, it concatenates all the tags separated by comma and also finds the alias of the url if is called node. Also you can also find the url alias for other pages such as terms or taxonomies. But let’s keep it simple and get the posts urls.</p>

<p>Finally, the script will use the data from this query to generate the new posts files and also to create the redirect files.</p>

<h3>Troubleshooting</h3>

<p>I had a hard time having the mysql gem work with seqel in my Mac OS X 10.7 (Lion) and ruby 1.9.2.</p>

<p>I got the following errors:</p>

<ul>
<li>Library not loaded: libmysqlclient.18.dylib (LoadError)
Sequel::DatabaseConnectionError: Mysql::ClientError::ServerGoneError: The MySQL server has gone away mysql2 ruby</li>
<li>&ldquo;LoadError: require &lsquo;mysql&rsquo; did not define Mysql::CLIENT_MULTI_RESULTS!&rdquo;</li>
<li>&ldquo;You are probably using the pure ruby mysql.rb driver, which Sequel does not support. You need to install the C based adapter, and make sure that the mysql.so file is loaded instead of the mysql.rb file.&rdquo;</li>
<li>Sequel::AdapterNotFound: LoadError: require &lsquo;mysql&rsquo; did not define Mysql::CLIENT_MULTI_RESULTS! You are probably using the pure ruby mysql.rb driver, which Sequel does not support. You need to install the C based adapter, and make sure that the mysql.so file is loaded instead of the mysql.rb file.</li>
<li>And others…</li>
</ul>


<h4>Solution:</h4>

<p>The mysql gem have been abandoned, so you also need mysql2 to work propery with sequel</p>

<p><figure class='code'><figcaption><span>bash Install MySQL gems </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo gem install sequel
</span><span class='line'><span class="nv">$ </span>sudo gem install mysql <span class="p">&amp;</span>ndash<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>with-mysql-config<span class="o">=</span>/usr/local/mysql/bin/mysql_config
</span><span class='line'><span class="nv">$ </span>sudo gem install mysql2 <span class="p">&amp;</span>ndash<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>with-mysql-config<span class="o">=</span>/usr/local/mysql/bin/mysql_config
</span></code></pre></td></tr></table></div></figure></p>

<p>also  you need to copy the following lib:</p>

<p><figure class='code'><figcaption><span>Reference needed libs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib
</span></code></pre></td></tr></table></div></figure></p>

<p>That should work.</p>

<p>Just if you are courious there is another gem called ruby-mysql, with which you can connect to mysql. But it doesn’t work with sequel</p>

<p><figure class='code'><figcaption><span>Alternative gem to connect to mysql (ruby-mysql) </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install ruby-mysql <span class="p">&amp;</span>ndash<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>with-mysql-config<span class="o">=</span>/usr/local/mysql/bin/mysql_config
</span><span class='line'><span class="nv">$ </span>irb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;require <span class="p">&amp;</span>lsquo<span class="p">;</span>mysql<span class="p">&amp;</span>rsquo<span class="p">;</span>
</span><span class='line'><span class="nv">db</span> <span class="o">=</span> Mysql.real_connect<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>SERVER<span class="p">&amp;</span>rdquo<span class="p">;</span>,<span class="p">&amp;</span>ldquo<span class="p">;</span>USER<span class="p">&amp;</span>rdquo<span class="p">;</span>,<span class="p">&amp;</span>ldquo<span class="p">;</span>PASSWORD<span class="p">&amp;</span>rdquo<span class="p">;</span>,<span class="p">&amp;</span>ldquo<span class="p">;</span>DATABASE<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></p></blockquote>
]]></content>
  </entry>
  
</feed>
